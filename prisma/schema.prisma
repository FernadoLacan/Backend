// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRoleEnum {
  ADMIN         @map("0")
  DEVELOPER     @map("1")  
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique  
  name      String
  lastname  String?
  phone     String?  
  role      UserRoleEnum  @default(DEVELOPER)
  password  String
  active    Boolean @default(true)
  tests     Test[]
  issues    Issue[]
}

model Project {
  id        String  @id @default(uuid())  
  name      String  @unique
  clientName String
  startDate DateTime
  endDate   DateTime
  resources String[]
  completed Boolean @default(true)
  active    Boolean @default(true)
  tests     Test[]
}

enum TestStateEnum {
  PENDING      @map("0")
  CORRECTED    @map("1")
  EXECUTED     @map("2")  
}

model Test {
  id        String  @id @default(uuid())  
  name      String
  description String?
  acceptance String?
  projectId String
  project   Project @relation(fields: [projectId], references: [id])
  userId    String  
  user      User @relation(fields: [userId], references: [id])
  state     TestStateEnum @default(PENDING)  
  issues     Issue[]
  startDate DateTime
  endDate   DateTime
  active    Boolean @default(true)
}

enum IssueStateEnum {
  PENDING      @map("0")
  REVIEWING    @map("1")
  FINISHED     @map("2")  
}

model Issue {
  id        String  @id @default(uuid())
  name      String
  description String?
  testId    String
  test      Test @relation(fields: [testId], references: [id])
  userId    String
  user      User @relation(fields: [userId], references: [id])
  state     IssueStateEnum @default(PENDING)
}